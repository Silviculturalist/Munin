# .github/workflows/ci.yml
name: CI

# Grant write access for Pages deploy
permissions:
  contents: write      # allow pushing commits
  pages: write         # allow updating GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --force-reinstall --no-cache-dir .[dev]

      - name: Run tests with coverage
        # this will produce both XML (for codecov) and HTML (for browse-artifact)
        run: pytest --cov=Munin --cov-report=xml --cov-report=html --cov-fail-under=50

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: htmlcov/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ./coverage.xml
          fail_ci_if_error: true

  build-docs:
    runs-on: ubuntu-latest
    needs: test-and-coverage
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13 # Or your desired version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install project dependencies (e.g., your Munin package and its dev extras)
          pip install .[dev]
          # Install documentation-specific dependencies
          pip install -r docs/requirements.txt


      - name: Build Sphinx docs
        working-directory: docs
        run: make html

      - name: Deploy docs to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html